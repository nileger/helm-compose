{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Helm Compose is a tool for managing multiple releases for one or many different Helm charts. It is an extension of the package manager idea behind Helm and is heavily inspired by Docker Compose.</p>"},{"location":"compose-file-reference/","title":"Compose File Reference","text":""},{"location":"compose-file-reference/#storage","title":"storage","text":"<pre><code>storage:\nname: my-compose\ntype: local\nnumberOfRevisions: 10\n</code></pre> Option Type Description Required Default name string Name to be used to store revisions with a storage provider. true type string Type / name of the storage provider you want to use. By default local files will be stored. false local numberOfRevisions int Number of revisions to be stored and to be able to rollback to. false 10 <p>More details regarding the available storage providers and provider specific options can be found here.</p>"},{"location":"compose-file-reference/#releases","title":"releases","text":"<pre><code>releases:\nmy-website:\nchart: bitnami/wordpress\n</code></pre> Option Type Description Required Default chart string Name of the chart to be used. true chartVersion string Version of the chart to be used. false latest forceUpdate bool Force resource updates through a replacement strategy false false historyMax int Limit the maximum number of revisions saved per release. false 10 createNamespace bool Create the release namespace if not present false false cleanUpOnFail bool Allow deletion of new resources created in this upgrade when upgrade fails. false false dependencyUpdate bool Update dependencies if they are missing before installing the chart false false skipTlsVerify bool Skip tls certificate checks for the chart download false false skipCrds bool If set, no CRDs will be installed. false false postRenderer string The path to an executable to be used for post rendering. If it exists in $PATH, the binary will be used, otherwise it will try to look for the executable at the given path false postRendererArgs array An argument to the post-renderer (can specify multiple) (default []) false kubeconfig string Path to the kubeconfig file false ~/.kube/config kubecontext string Name of the kubeconfig context to use false caFile string Verify certificates of HTTPS-enabled servers using this CA bundle false certFile string Identify HTTPS client using this SSL certificate file false keyFile string Identify HTTPS client using this SSL key file false timeout string Time to wait for any individual Kubernetes operation (like Jobs for hooks) (default 5m0s) false 5m wait bool Waits until all Pods are in a ready state,  It will wait for as long as the --timeout value false <p>| values           | map    | Map of values with highest priority to overwrite any values in the chart values or your additional values files. (Allows for usage of environment variables.)               | false    |                | | valueFiles       | string | List of paths to value files.                                                                                                                                               | false    | 5m             |</p> <p>Uninstall options:</p> Option Type Description Required Default deletionStrategy string Must be \"background\", \"orphan\", or \"foreground\". Selects the deletion cascading strategy for the dependents. false background deletionTimeout string Time to wait for any individual Kubernetes operation (like Jobs for hooks) (default 5m0s) false 5m deletionNoHooks bool Prevent hooks from running during uninstallation false false keepHistory bool Remove all associated resources and mark the release as deleted, but retain the release history false false"},{"location":"compose-file-reference/#repositories","title":"repositories","text":"<p>A map of repository names and their respective urls.</p> <pre><code>repositories:\nbitnami: https://charts.bitnami.com/bitnami\n</code></pre>"},{"location":"key-features-and-use-cases/","title":"Key Features and Use Cases","text":"<p>The main idea behind <code>helm-compose</code> is to control / configure all helm related options as code by providing a compose file structure to configure everything you need to setup your helm based infrastructure.</p>"},{"location":"key-features-and-use-cases/#repository-handling","title":"Repository handling","text":"<p>Configuration based installation of all necessary repositories you define as a dependency in your <code>helm-compose.yaml</code> before triggering the installation of your releases.</p> <pre><code>apiVersion: 1.0\nrepositories:\nbitnami: https://charts.bitnami.com/bitnami\n</code></pre>"},{"location":"key-features-and-use-cases/#multi-release-handling","title":"Multi release handling","text":"<p>The main feature of <code>helm-compose</code> is the ability to define a multitude of releases inside a single file. <code>helm-compose</code> supports single kubernetes-cluster and multi-cluster configuration.</p>"},{"location":"key-features-and-use-cases/#single-cluster","title":"Single cluster","text":"<p>Define as many releases as you would like for one or more namespaces.</p> <pre><code>apiVersion: 1.0\nreleases:\nwordpress:\nchart: bitnami/wordpress\nchartVersion: 14.3.2\nnamespace: homepage\nwordpress2:\nchart: bitnami/wordpress\nchartVersion: 15.2.22\nnamespace: homepage\nrepositories:\nbitnami: https://charts.bitnami.com/bitnami\n</code></pre>"},{"location":"key-features-and-use-cases/#multi-cluster","title":"Multi cluster","text":"<p>You can either use the <code>kubeconfig</code> options to point to a different path and use the <code>kubecontext</code> to select a specific context inside your kubeconfig.</p> <pre><code>apiVersion: 1.0\nreleases:\nwordpress-dev:\nchart: bitnami/wordpress\nchartVersion: 14.3.2\nnamespace: homepage\nkubeconfig: ~/.kube/dev\nwordpress-int:\nchart: bitnami/wordpress\nchartVersion: 15.2.22\nnamespace: homepage\nkubeconfig: ~/.kube/int\nrepositories:\nbitnami: https://charts.bitnami.com/bitnami\n</code></pre>"},{"location":"key-features-and-use-cases/#environment-variables","title":"Environment variables","text":"<p><code>helm-compose</code> is able to inject environment variables inside your values block to deal with secrets that shouldn't be committed to your source control.</p> <p>Syntax: <code>${MY_ENV_VARIABLE}</code>.</p> <pre><code>export WORDPRESS_ADMIN_PASSWORD=\"xxx\"\nexport MARIADB_ROOT_PASSWORD=\"xxx\"\nhelm compose up\n</code></pre> <pre><code>apiVersion: 1.0\nreleases:\nwordpress:\nchart: bitnami/wordpress\nvalues:\nwordpressPassword: ${WORDPRESS_ADMIN_PASSWORD}\nmariadb.auth.rootPassword: ${MARIADB_ROOT_PASSWORD}\n</code></pre>"},{"location":"key-features-and-use-cases/#revision-handling","title":"Revision handling","text":"<p>Revisions are essentially snapshots of your current <code>helm-compose.yaml</code>. Every time you trigger <code>helm compose up</code> a new revision will be created and stored (By default the last 10 revisions are kept).</p>"},{"location":"key-features-and-use-cases/#configuration","title":"Configuration","text":"<pre><code>apiVersion: 1.0\nstorage:\nname: wordpress\ntype: local # default: local\nnumberOfRevisions: 5 # default: 10\n</code></pre>"},{"location":"key-features-and-use-cases/#usage","title":"Usage","text":"<p>You can list your revisions and get the content of your previous revisions via the <code>helm compose list</code> and <code>helm compose get</code> commands.</p>"},{"location":"key-features-and-use-cases/#rollback","title":"Rollback","text":"<p>Just select a revision you want to go back to. You can check the content with the <code>helm compose get</code> command and parse it directly into any <code>helm compose</code> command like so:</p> <pre><code>$ helm compose list\n| Date             | Revision |\n| ---------------- | -------- |\n| 2023-05-24 23:56 |       12 |\n| 2023-05-24 23:56 |       13 |\n| 2023-05-24 23:57 |       14 |\n| 2023-05-24 23:57 |       15 |\n| 2023-05-24 23:57 |       16 |\n# select revision 15 and use the pipe | operator to parse the content back into compose up with -f -\nhelm compose get 15 | helm compose up -f -\n</code></pre>"},{"location":"quick-start/","title":"Quick Start","text":""},{"location":"quick-start/#installation","title":"Installation","text":"<p>Install a specific version (recommended). Click here for the latest version.</p> <pre><code>helm plugin install https://github.com/seacrew/helm-compose --version 1.1.2\n</code></pre> <p>Install latest version.</p> <pre><code>helm plugin install https://github.com/seacrew/helm-compose\n</code></pre>"},{"location":"quick-start/#how-to-use-helm-compose","title":"How to use helm compose","text":"<p>Helm Compose makes it easy to define a Compose file containing a list of Releases and necessary Repositories for the charts you use.</p> <p>Install your releases:</p> <pre><code>helm compose up -f helm-compose.yaml\n</code></pre> <p>Uninstall your releases</p> <pre><code>helm compose down -f helm-compose.yaml\n</code></pre> <p>A Helm Compose file looks something like this:</p> <pre><code>apiVersion: 1.0\nstorage:\nname: mycompose\ntype: local # default\npath: .hcstate # default\nreleases:\nwordpress:\nchart: bitnami/wordpress\nchartVersion: 14.3.2\nwordpress2:\nchart: bitnami/wordpress\nchartVersion: 15.2.22\nnamespace: homepage\ncreateNamespace: true\npostgres:\nchart: bitnami/postgresql\nchartVersion: 12.1.9\nnamespace: database\ncreateNamespace: true\nrepositories:\nbitnami: https://charts.bitnami.com/bitnami\n</code></pre> <p>All <code>helm-compose</code> commands accept the <code>-f</code> flag to pass your compose file location. Otherwise <code>helm-compose</code> will automatically look for a list of file names inside your current directory:</p> <ul> <li>helm-compose.yaml</li> <li>helm-compose.yml</li> <li>helmcompose.yaml</li> <li>helm-compose.yml</li> <li>helmcompose.yaml</li> <li>helmcompose.yml</li> <li>helmcompose</li> <li>compose.yaml</li> <li>compose.yml</li> </ul> <p>Check out the helm compose examples.</p>"},{"location":"storage-providers/","title":"Storage Providers","text":"<p>Following options are applicable regardless of the selected provider.</p> Option Type Description Required Default name string Name to be used to store revisions with a storage provider. true type string Type / name of the storage provider you want to use. By default local files will be stored. false local numberOfRevisions int Number of revisions to be stored and to be able to rollback to. false 10"},{"location":"storage-providers/#local","title":"Local","text":"<p>Stores your compose revisions locally inside the <code>.hcstate</code> directory next to your <code>helm-compose.yaml</code>.</p> Option Type Description Required Default path string The directory path to store your revisions (Relative to the directory you execute <code>helm compose</code> in). false .hcstate"},{"location":"storage-providers/#kubernetes","title":"Kubernetes","text":"<p>Stores your compose revisions similar to helm releases inside secrets in a kubernetes cluster namespace.</p> Option Type Description Required Default namespace string The namespace to store your revisions in. false default kubeconfig string The path to your kubeconfig file false ~/.kube/config kubecontext string The context to use from your specified kubeconfig. false current-context"},{"location":"storage-providers/#s3","title":"S3","text":"<p>Stores your compose revisions inside a s3 bucket. You will need to set your AWS credentials (access and secret key) via environment variables or the <code>~/.aws/config</code> file. Official AWS documentation.</p> Option Type Description Required Default s3bucket string Specify the bucket name to upload to and download from. true s3prefix string Specify the object prefix (directory) for the revisions to be uploaded to and downloaded from. false (root path) s3region string Set a custom S3 region. false By default the region will be read from the AWS_REGION environment variable. s3endpoint string Set a custom S3 endpoint / host url. false Default AWS S3 service endpoint. s3insecure bool Disable the verification of the servers certificate chain and hostname. false false s3disableSSL bool Disable the usage of SSL / https. false false s3forcePathStyle bool Enforce to use path style. Especially useful for none AWS S3 provider which often only support path style. false false"},{"location":"storage-providers/#gcs","title":"GCS","text":"<p>Not yet implemented</p>"},{"location":"commands/down/","title":"helm compose down","text":"<p>Uninstall all releases defined in your <code>helm-compose.yaml</code></p>"},{"location":"commands/down/#usage","title":"Usage","text":"<p>The following command will uninstall all releases of the previous revision if one exists. Otherwise the releases defined in your current <code>helm-compose.yaml</code> will be uninstalled.</p> <pre><code>helm compose down [flags]\n</code></pre>"},{"location":"commands/down/#options","title":"Options","text":"<pre><code>Flags:\n  -h, --help   help for down\n\nGlobal Flags:\n  -f, --file string   Compose configuration file\n</code></pre>"},{"location":"commands/get/","title":"helm compose get","text":"<p>Get a previous revision of your <code>helm-compose.yaml</code></p>"},{"location":"commands/get/#usage","title":"Usage","text":"<p>The following command will return the previous <code>helm-compose.yaml</code> content on stdout.</p> <pre><code>helm compose get [revision] [flags]\n</code></pre>"},{"location":"commands/get/#options","title":"Options","text":"<pre><code>Flags:\n  -h, --help   help for get\n\nGlobal Flags:\n  -f, --file string   Compose configuration file\n</code></pre>"},{"location":"commands/list/","title":"helm compose list","text":"<p>List previous revisions of your <code>helm-compose.yaml</code></p>"},{"location":"commands/list/#usage","title":"Usage","text":"<pre><code>helm compose list [flags]\n</code></pre>"},{"location":"commands/list/#options","title":"Options","text":"<pre><code>Flags:\n  -h, --help   help for list\n\nGlobal Flags:\n  -f, --file string   Compose configuration file\n</code></pre>"},{"location":"commands/list/#example","title":"Example","text":"<pre><code>$ helm compose list\n\n| Date             | Revision |\n| ---------------- | -------- |\n| 2023-05-22 10:24 |        1 |\n| 2023-05-22 11:19 |        2 |\n</code></pre>"},{"location":"commands/up/","title":"helm compose up","text":"<p>Install all releases and repositories defined in your <code>helm-compose.yaml</code></p>"},{"location":"commands/up/#usage","title":"Usage","text":"<p>The following command will install all releases defined in your <code>helm-compose.yaml</code> and will compare it to the latest previous revision and uninstall all releases that have been removed since then.</p> <pre><code>helm compose up [flags]\n</code></pre>"},{"location":"commands/up/#options","title":"Options","text":"<pre><code>Flags:\n  -h, --help   help for up\n\nGlobal Flags:\n  -f, --file string   Compose configuration file\n</code></pre>"}]}